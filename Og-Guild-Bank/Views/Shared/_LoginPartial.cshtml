@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Bank Admin") || User.IsInRole("Super Admin")))
            {
                @await Component.InvokeAsync("AdminMenu")
            }
            <li class="nav-item">
                <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Create Account</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
